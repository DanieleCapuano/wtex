(()=>{var __webpack_modules__={880:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{ax:()=>init_program});var _vertex_common__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(961),_uniforms_common__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(286),_utils__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(853),_texture_common__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(370),_program_loop__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(398),init_program=_init_program,init_program_fbos=_init_program_fbos,get_program_data=_get_program_data;function _init_program(e,r){var t={};try{var n=[r.vertex_shader,r.fragment_shader].map((function(e){return _decorate_source(e)}));if(r.build_program)t=r.build_program(e,n);else{var o=(0,_utils__WEBPACK_IMPORTED_MODULE_2__.jr)(e,n);t=_init_program_fbos(Object.assign({program:o},_get_program_data(e,o,n)),e,r)}}catch(e){console.warn("PROGRAM ERROR FOR CURRENT PROGRAM"),console.warn(e)}return t}function _get_program_data(e,r,t){return{vertex_data:(0,_vertex_common__WEBPACK_IMPORTED_MODULE_3__.D)(e,r),uniforms:(0,_uniforms_common__WEBPACK_IMPORTED_MODULE_4__.r)(e,r),shaders:t,start_time:performance.now(),exec_loop:_program_loop__WEBPACK_IMPORTED_MODULE_1__.y}}function _init_program_fbos(e,r,t){var n=t.canvas,o=t.framebuffers_n||1,_=t.framebuffers_offset||1;return e.has_framebuffer=t.has_framebuffer,t.dont_create_base_texture||(e.base_texture=e.base_texture||_texture_common__WEBPACK_IMPORTED_MODULE_0__.K.init_texture(r,0)),e.fbo_data=_texture_common__WEBPACK_IMPORTED_MODULE_0__.K.create_fbo_textures(e,r,o,_,n.clientWidth,n.clientHeight),e}function _decorate_source(source){return eval("`"+source+"`")}},398:(e,r,t)=>{"use strict";t.d(r,{d:()=>_,y:()=>a});var n=t(853),o=t(370),_=function(e,r){var t=r.gl,o=r.canvas,_=e.uniforms,a=e.program,u=e.vertex_data;return(0,n.Lo)(o),window.addEventListener("resize",(function(){(0,n.Lo)(o),i=!0})),t.useProgram(a),t.bindVertexArray(u.vao),t.disable(t.DEPTH_TEST),t.disable(t.CULL_FACE),_.u_image.set(t,a,"1i",0),function n(){requestAnimationFrame(n),t.viewport(0,0,t.canvas.width,t.canvas.height),t.clearColor(0,0,0,0),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT),e.exec_loop(e,t,r),i=!1}()},a=function(e,r,t,_){var a=r.base_texture,c=_.framebuffers_offset,f=_.framebuffers_n,s=_.inputElement||document.getElementById(_.inputElementId),m=_.canvas||document.getElementById(_.outputElementId)||t.canvas;t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,a),(_.input.isVideo||!u)&&(o.K.draw_into_texture(t,s),u=!0),function(e,r,t){var n=e.uniforms,o=e.program;if(n.u_flip_y&&n.u_flip_y.set(r,o,"1f",1),n.u_time){var _=(performance.now()-e.start_time)/1e3;n.u_time.set(r,o,"1f",_)}i&&n.u_resolution.set(r,o,"2f",[r.canvas.width,r.canvas.height])}(r,t);for(var d=c;d<f+c;++d)o.K.set_framebuffer(t,o.K.get_fbo(r,d),m.clientWidth,m.clientHeight),(0,n.uX)(t),t.bindTexture(t.TEXTURE_2D,o.K.get_fbo_texture(r,d));e(r,t)}.bind(null,(function(e,r){var t=e.uniforms,_=e.program;t.u_flip_y&&t.u_flip_y.set(r,_,"1f",-1),o.K.set_framebuffer(r,null,r.canvas.width,r.canvas.height),(0,n.uX)(r)})),i=!0,u=!1},370:(e,r,t)=>{"use strict";t.d(r,{K:()=>n});var n=function(){return{init_texture:e,draw_into_texture:r,create_fbo_textures:function(t,n,o,_,a,i){for(var u=[],c=_=_||0;c<o+_;++c){var f=e(n);r(n,null,a,i);var s=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,s);var m=n.COLOR_ATTACHMENT0;n.framebufferTexture2D(n.FRAMEBUFFER,m,n.TEXTURE_2D,f,0),u[c]={fbo:s,texture:f}}return u},set_framebuffer:function(e,r,t,n){e.bindFramebuffer(e.FRAMEBUFFER,r),e.viewport(0,0,t,n)},get_fbo_texture:function(e,r){return e.fbo_data[r].texture},get_fbo:function(e,r){return e.fbo_data[r].fbo}};function e(e){var r=e.createTexture();return e.bindTexture(e.TEXTURE_2D,r),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),r}function r(e,r,t,n){var o=e.RGBA,_=e.RGBA,a=e.UNSIGNED_BYTE,i=r,u=i?[e.TEXTURE_2D,0,o,_,a,i]:[e.TEXTURE_2D,0,o,t,n,0,_,a,i];e.texImage2D.apply(e,u)}}()},286:(e,r,t)=>{"use strict";t.d(r,{r:()=>o});var n=t(853);function o(e,r){var t=(0,n.Vh)(e,{program:r});return Object.keys(t.uniforms).reduce((function(e,r){return e[r]={get:function(){return t.uniforms[r].loc},set:o.bind(null,t.uniforms[r])},e}),{});function o(e,r,t,n,o){r["uniform"+n].apply(r,[].concat(e.loc,o))}}},853:(e,r,t)=>{"use strict";t.d(r,{Lo:()=>i,Vh:()=>c,c0:()=>n,jr:()=>a,kQ:()=>o,uX:()=>u});var n=function(e,r,t,n,o){var _=r,a=r+n,i=t,u=t+o;e.bufferData(e.ARRAY_BUFFER,new Float32Array([_,i,a,i,_,u,_,u,a,i,a,u]),e.STATIC_DRAW)},o=function(e,r,t,n,o,_){e.bindBuffer(e.ARRAY_BUFFER,r),e.enableVertexAttribArray(t),e.vertexAttribPointer(t,n,_||e.FLOAT,o||!1,0,0)},_=function(e,r,t,n){var o=n||s,_=e.createShader(t);return e.shaderSource(_,r),e.compileShader(_),e.getShaderParameter(_,e.COMPILE_STATUS)?_:(o("*** Error compiling shader '"+_+"':"+e.getShaderInfoLog(_)),e.deleteShader(_),null)},a=function(e,r,t,n,o){for(var a=[],i=0;i<r.length;++i)a.push(_(e,r[i],e[f[i]],o));return function(e,r,t,n,o){var _=o||s,a=e.createProgram();return r.forEach((function(r){e.attachShader(a,r)})),t&&t.forEach((function(r,t){e.bindAttribLocation(a,n?n[t]:t,r)})),e.linkProgram(a),e.getProgramParameter(a,e.LINK_STATUS)?a:(_("Error in program linking:"+e.getProgramInfoLog(a)),e.deleteProgram(a),null)}(e,a,t,n,o)},i=function(e,r){r=r||1;var t=e.clientWidth*r|0,n=e.clientHeight*r|0;return(e.width!==t||e.height!==n)&&(e.width=t,e.height=n,!0)},u=function(e,r,t,n){var o=m(r)||e.TRIANGLES,_=m(t)||0,a=m(n)||6;e.drawArrays(o,_,a)},c=function(e,r){var t=r.program;r.attributes={},r.uniforms={};for(var n=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),o=r.attributes,_=0;_<n;_++){var a=e.getActiveAttrib(t,_);o[a.name]={loc:e.getAttribLocation(t,a.name),def:a}}var i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);o=r.uniforms;for(var u=0;u<i;u++){var c=e.getActiveUniform(t,u);o[c.name]={loc:e.getUniformLocation(t,c.name),def:c}}return r},f=["VERTEX_SHADER","FRAGMENT_SHADER"];function s(e){window.top.console&&(window.top.console.error?window.top.console.error(e):window.top.console.log&&window.top.console.log(e))}function m(e){return null!=e?e:null}},961:(e,r,t)=>{"use strict";t.d(r,{D:()=>o});var n=t(853),o=function(e,r){var t={};return t.vao=e.createVertexArray(),e.bindVertexArray(t.vao),t.positionAttributeLocation=e.getAttribLocation(r,"a_position"),t.texCoodAttributeLocation=e.getAttribLocation(r,"a_texCoord"),t.pos_buffer=e.createBuffer(),t.coord_buffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,t.pos_buffer),(0,n.c0)(e,0,0,e.canvas.clientWidth,e.canvas.clientHeight),(0,n.kQ)(e,t.pos_buffer,t.positionAttributeLocation,2),e.bindBuffer(e.ARRAY_BUFFER,t.coord_buffer),(0,n.c0)(e,0,0,1,1),(0,n.kQ)(e,t.coord_buffer,t.texCoodAttributeLocation,2,!0),e.bindVertexArray(null),t}},534:e=>{e.exports='#version 300 es\r\n\r\n// fragment shaders don\'t have a default precision so we need\r\n// to pick one. mediump is a good default. It means "medium precision"\r\nprecision mediump float;\r\n\r\n// our texture\r\nuniform sampler2D u_image;\r\nuniform float u_time;\r\nuniform float u_flip_y;\r\n\r\n// the texCoords passed in from the vertex shader.\r\nin vec2 v_texCoord;\r\n\r\n// we need to declare an output for the fragment shader\r\nout vec4 outColor;\r\n\r\nvoid main() {\r\n  vec4 tex = texture(u_image, v_texCoord);\r\n  if (u_flip_y == 1.) {\r\n    tex.r = tex.r * 1.5 * abs(sin(u_time));\r\n  }\r\n  outColor = tex;\r\n}'},86:e=>{e.exports="#version 300 es\r\n\r\nprecision mediump float;\r\n\r\n// an attribute is an input (in) to a vertex shader.\r\n// It will receive data from a buffer\r\nin vec2 a_position;\r\nin vec2 a_texCoord;\r\n\r\n// Used to pass in the resolution of the canvas\r\nuniform vec2 u_resolution;\r\nuniform float u_flip_y;\r\n\r\n// Used to pass the texture coordinates to the fragment shader\r\nout vec2 v_texCoord;\r\n\r\n// all shaders have a main function\r\nvoid main() {\r\n\r\n  // convert the position from pixels to 0.0 to 1.0\r\n  vec2 zeroToOne = a_position / (u_resolution);\r\n\r\n  // convert from 0->1 to 0->2\r\n  vec2 zeroToTwo = zeroToOne * 2.0;\r\n\r\n  // convert from 0->2 to -1->+1 (clipspace)\r\n  vec2 clipSpace = zeroToTwo - 1.0;\r\n\r\n  gl_Position = vec4(clipSpace * vec2(1, u_flip_y), 0, 1);\r\n\r\n  // pass the texCoord to the fragment shader\r\n  // The GPU will interpolate this value between points.\r\n  v_texCoord = a_texCoord;\r\n  // v_texCoord = vec2(1,0);\r\n}"}},__webpack_module_cache__={};function __webpack_require__(e){var r=__webpack_module_cache__[e];if(void 0!==r)return r.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.d=(e,r)=>{for(var t in r)__webpack_require__.o(r,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},__webpack_require__.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);var __webpack_exports__={};(()=>{"use strict";var e=__webpack_require__(86),r=__webpack_require__(534),t=__webpack_require__(880),n=__webpack_require__(398),o=function(e){var r=e.vertex_shader,o=e.fragment_shader,a=e.config_path,i=e.WIN_LOADED;return new Promise((function(e){var u=function(){(function(e){return new Promise((function(r){fetch(e).then((function(e){return e.json()})).then((function(e){return r(e)}))}))})(a||"/config/config.json").then((function(a){var i;(i=Object.assign(a,{vertex_shader:r,fragment_shader:o}),function(e){var r=e.input,t=e.output;return Promise.all([{conf:r,type:"input"},{conf:t,type:"output"}].map((function(e){return new Promise((function(r){var t=e.conf||{},n=t.domQuery,o=t.imagePath;if(n)return e.elem=document.querySelector(n),r(e);o?(e.elem=new Image,e.elem.src=o,e.elem.addEventListener("load",r.bind(null,e))):r(e)}))})))}(i).then((function(e){var r=e.find((function(e){return"output"===e.type})).elem,o=e.find((function(e){return"input"===e.type})).elem,a=r.getContext("webgl2",{desynchronized:!0,powerPreference:"high-performance"});if(a)return i=Object.assign({},i,{gl:a,canvas:r,inputElement:o}),_=(0,t.ax)(a,i),(0,n.d)(_,i)}))).then(e)}))};i&&u(),window.addEventListener("load",u)}))},_={};window.addEventListener("load",(function(){o({vertex_shader:e,fragment_shader:r,config_path:"/config/config.json",WIN_LOADED:!0}).then((function(){console.info("SYSTEM RUNNING")}))}))})()})();